// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package server

import (
	"context"

	"QMall/user/cmd/rpc/internal/logic"
	"QMall/user/cmd/rpc/internal/svc"
	"QMall/user/cmd/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) CreateUser(ctx context.Context, in *pb.CreateUserReq) (*pb.CreateUserResp, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) DeleteUser(ctx context.Context, in *pb.DeleteUserReq) (*pb.DeleteUserResp, error) {
	l := logic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}

func (s *UserServer) GetUserById(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserServer) LoginUser(ctx context.Context, in *pb.LoginUserReq) (*pb.LoginUserResp, error) {
	l := logic.NewLoginUserLogic(ctx, s.svcCtx)
	return l.LoginUser(in)
}

func (s *UserServer) GetUserToken(ctx context.Context, in *pb.TokenReq) (*pb.TokenResp, error) {
	l := logic.NewGetUserTokenLogic(ctx, s.svcCtx)
	return l.GetUserToken(in)
}
