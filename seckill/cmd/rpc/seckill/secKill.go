// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: seckill.proto

package seckill

import (
	"context"

	"QMall/seckill/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetSecKillQuotaByProductsIdReq  = pb.GetSecKillQuotaByProductsIdReq
	GetSecKillQuotaByProductsIdResp = pb.GetSecKillQuotaByProductsIdResp
	IncreaseSecKillOrderReq         = pb.IncreaseSecKillOrderReq
	IncreaseSecKillOrderResp        = pb.IncreaseSecKillOrderResp
	IncreaseSecKillProductsReq      = pb.IncreaseSecKillProductsReq
	IncreaseSecKillProductsResp     = pb.IncreaseSecKillProductsResp
	IncreaseSecKillQuotaReq         = pb.IncreaseSecKillQuotaReq
	IncreaseSecKillQuotaResp        = pb.IncreaseSecKillQuotaResp
	IncreaseSecKillRecordReq        = pb.IncreaseSecKillRecordReq
	IncreaseSecKillRecordResp       = pb.IncreaseSecKillRecordResp
	IncreaseSecKillStockReq         = pb.IncreaseSecKillStockReq
	IncreaseSecKillStockResp        = pb.IncreaseSecKillStockResp
	IncreaseSecKillUserQuotaReq     = pb.IncreaseSecKillUserQuotaReq
	IncreaseSecKillUserQuotaResp    = pb.IncreaseSecKillUserQuotaResp
	SecKillActivity                 = pb.SecKillActivity
	SecKillActivityProduct          = pb.SecKillActivityProduct
	SecKillActivityProductSku       = pb.SecKillActivityProductSku
	SecKillActivityTime             = pb.SecKillActivityTime
	SecKillOrder                    = pb.SecKillOrder
	SecKillProducts                 = pb.SecKillProducts
	SecKillQuota                    = pb.SecKillQuota
	SecKillRecord                   = pb.SecKillRecord
	SecKillStock                    = pb.SecKillStock
	SecKillUserQuota                = pb.SecKillUserQuota

	SecKill interface {
		IncreaseSecKillOrder(ctx context.Context, in *IncreaseSecKillOrderReq, opts ...grpc.CallOption) (*IncreaseSecKillOrderResp, error)
		IncreaseSecKillProducts(ctx context.Context, in *IncreaseSecKillProductsReq, opts ...grpc.CallOption) (*IncreaseSecKillProductsResp, error)
		IncreaseSecKillQuota(ctx context.Context, in *IncreaseSecKillQuotaReq, opts ...grpc.CallOption) (*IncreaseSecKillQuotaResp, error)
		IncreaseSecKillUserQuota(ctx context.Context, in *IncreaseSecKillUserQuotaReq, opts ...grpc.CallOption) (*IncreaseSecKillUserQuotaResp, error)
		IncreaseSecKillStock(ctx context.Context, in *IncreaseSecKillStockReq, opts ...grpc.CallOption) (*IncreaseSecKillStockResp, error)
		IncreaseSecKillRecord(ctx context.Context, in *IncreaseSecKillRecordReq, opts ...grpc.CallOption) (*IncreaseSecKillRecordResp, error)
		GetSecKillQuotaByProductsId(ctx context.Context, in *GetSecKillQuotaByProductsIdReq, opts ...grpc.CallOption) (*GetSecKillQuotaByProductsIdResp, error)
	}

	defaultSecKill struct {
		cli zrpc.Client
	}
)

func NewSecKill(cli zrpc.Client) SecKill {
	return &defaultSecKill{
		cli: cli,
	}
}

func (m *defaultSecKill) IncreaseSecKillOrder(ctx context.Context, in *IncreaseSecKillOrderReq, opts ...grpc.CallOption) (*IncreaseSecKillOrderResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.IncreaseSecKillOrder(ctx, in, opts...)
}

func (m *defaultSecKill) IncreaseSecKillProducts(ctx context.Context, in *IncreaseSecKillProductsReq, opts ...grpc.CallOption) (*IncreaseSecKillProductsResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.IncreaseSecKillProducts(ctx, in, opts...)
}

func (m *defaultSecKill) IncreaseSecKillQuota(ctx context.Context, in *IncreaseSecKillQuotaReq, opts ...grpc.CallOption) (*IncreaseSecKillQuotaResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.IncreaseSecKillQuota(ctx, in, opts...)
}

func (m *defaultSecKill) IncreaseSecKillUserQuota(ctx context.Context, in *IncreaseSecKillUserQuotaReq, opts ...grpc.CallOption) (*IncreaseSecKillUserQuotaResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.IncreaseSecKillUserQuota(ctx, in, opts...)
}

func (m *defaultSecKill) IncreaseSecKillStock(ctx context.Context, in *IncreaseSecKillStockReq, opts ...grpc.CallOption) (*IncreaseSecKillStockResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.IncreaseSecKillStock(ctx, in, opts...)
}

func (m *defaultSecKill) IncreaseSecKillRecord(ctx context.Context, in *IncreaseSecKillRecordReq, opts ...grpc.CallOption) (*IncreaseSecKillRecordResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.IncreaseSecKillRecord(ctx, in, opts...)
}

func (m *defaultSecKill) GetSecKillQuotaByProductsId(ctx context.Context, in *GetSecKillQuotaByProductsIdReq, opts ...grpc.CallOption) (*GetSecKillQuotaByProductsIdResp, error) {
	client := pb.NewSecKillClient(m.cli.Conn())
	return client.GetSecKillQuotaByProductsId(ctx, in, opts...)
}
