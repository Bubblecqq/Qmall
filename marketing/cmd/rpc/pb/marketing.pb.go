// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: marketing.proto

//import "product/cmd/rpc/product/pb/product.proto";

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义 Activity 消息
type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ActivityStartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=activity_start_time,json=activityStartTime,proto3" json:"activity_start_time,omitempty"`
	ActivityEndTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=activity_end_time,json=activityEndTime,proto3" json:"activity_end_time,omitempty"`
	IsOnline          int32                  `protobuf:"varint,5,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	CreateUser        int64                  `protobuf:"varint,6,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	CreateTime        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateUser        int64                  `protobuf:"varint,8,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`
	UpdateTime        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IsDeleted         int32                  `protobuf:"varint,10,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	mi := &file_marketing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Activity) GetActivityStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivityStartTime
	}
	return nil
}

func (x *Activity) GetActivityEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivityEndTime
	}
	return nil
}

func (x *Activity) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *Activity) GetCreateUser() int64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *Activity) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Activity) GetUpdateUser() int64 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *Activity) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Activity) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

// 定义 ActivityProduct 消息
type ActivityProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityTimeId       int64                  `protobuf:"varint,2,opt,name=activity_time_id,json=activityTimeId,proto3" json:"activity_time_id,omitempty"`
	ProductId            int64                  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName          string                 `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductMainPicture   string                 `protobuf:"bytes,5,opt,name=product_main_picture,json=productMainPicture,proto3" json:"product_main_picture,omitempty"`
	ProductStartingPrice float64                `protobuf:"fixed64,6,opt,name=product_starting_price,json=productStartingPrice,proto3" json:"product_starting_price,omitempty"`
	CategoryId           int64                  `protobuf:"varint,7,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CreateUser           int64                  `protobuf:"varint,8,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	CreateTime           *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateUser           int64                  `protobuf:"varint,10,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`
	UpdateTime           *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IsDeleted            int32                  `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *ActivityProduct) Reset() {
	*x = ActivityProduct{}
	mi := &file_marketing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityProduct) ProtoMessage() {}

func (x *ActivityProduct) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityProduct.ProtoReflect.Descriptor instead.
func (*ActivityProduct) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityProduct) GetActivityTimeId() int64 {
	if x != nil {
		return x.ActivityTimeId
	}
	return 0
}

func (x *ActivityProduct) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ActivityProduct) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ActivityProduct) GetProductMainPicture() string {
	if x != nil {
		return x.ProductMainPicture
	}
	return ""
}

func (x *ActivityProduct) GetProductStartingPrice() float64 {
	if x != nil {
		return x.ProductStartingPrice
	}
	return 0
}

func (x *ActivityProduct) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ActivityProduct) GetCreateUser() int64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *ActivityProduct) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ActivityProduct) GetUpdateUser() int64 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *ActivityProduct) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ActivityProduct) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

// 定义 ActivityProductSku 消息
type ActivityProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityProductId int64                  `protobuf:"varint,2,opt,name=activity_product_id,json=activityProductId,proto3" json:"activity_product_id,omitempty"`
	ProductId         int64                  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductSkuId      int64                  `protobuf:"varint,4,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`
	Price             float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	OriginalPrice     float64                `protobuf:"fixed64,6,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"`
	Number            int64                  `protobuf:"varint,7,opt,name=number,proto3" json:"number,omitempty"`
	Stock             int64                  `protobuf:"varint,8,opt,name=stock,proto3" json:"stock,omitempty"`
	CreateUser        int64                  `protobuf:"varint,9,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	CreateTime        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateUser        int64                  `protobuf:"varint,11,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`
	UpdateTime        *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IsDeleted         int32                  `protobuf:"varint,13,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *ActivityProductSku) Reset() {
	*x = ActivityProductSku{}
	mi := &file_marketing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityProductSku) ProtoMessage() {}

func (x *ActivityProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityProductSku.ProtoReflect.Descriptor instead.
func (*ActivityProductSku) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityProductSku) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityProductSku) GetActivityProductId() int64 {
	if x != nil {
		return x.ActivityProductId
	}
	return 0
}

func (x *ActivityProductSku) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ActivityProductSku) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *ActivityProductSku) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ActivityProductSku) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ActivityProductSku) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ActivityProductSku) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ActivityProductSku) GetCreateUser() int64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *ActivityProductSku) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ActivityProductSku) GetUpdateUser() int64 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *ActivityProductSku) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ActivityProductSku) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

// 定义 ActivityTime 消息
type ActivityTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityId int64                  `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	TimeName   string                 `protobuf:"bytes,3,opt,name=time_name,json=timeName,proto3" json:"time_name,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IsEnable   int32                  `protobuf:"varint,6,opt,name=is_enable,json=isEnable,proto3" json:"is_enable,omitempty"`
	CreateUser int64                  `protobuf:"varint,7,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateUser int64                  `protobuf:"varint,9,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IsDeleted  int32                  `protobuf:"varint,11,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *ActivityTime) Reset() {
	*x = ActivityTime{}
	mi := &file_marketing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityTime) ProtoMessage() {}

func (x *ActivityTime) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityTime.ProtoReflect.Descriptor instead.
func (*ActivityTime) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityTime) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityTime) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityTime) GetTimeName() string {
	if x != nil {
		return x.TimeName
	}
	return ""
}

func (x *ActivityTime) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ActivityTime) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ActivityTime) GetIsEnable() int32 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

func (x *ActivityTime) GetCreateUser() int64 {
	if x != nil {
		return x.CreateUser
	}
	return 0
}

func (x *ActivityTime) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ActivityTime) GetUpdateUser() int64 {
	if x != nil {
		return x.UpdateUser
	}
	return 0
}

func (x *ActivityTime) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ActivityTime) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

// 定义 AddActivityReq 消息
type AddActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityName      string                 `protobuf:"bytes,1,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	IsOnline          int32                  `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	ActivityStartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=activity_start_time,json=activityStartTime,proto3" json:"activity_start_time,omitempty"`
	ActivityEndTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=activity_end_time,json=activityEndTime,proto3" json:"activity_end_time,omitempty"`
}

func (x *AddActivityReq) Reset() {
	*x = AddActivityReq{}
	mi := &file_marketing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityReq) ProtoMessage() {}

func (x *AddActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityReq.ProtoReflect.Descriptor instead.
func (*AddActivityReq) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{4}
}

func (x *AddActivityReq) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *AddActivityReq) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *AddActivityReq) GetActivityStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivityStartTime
	}
	return nil
}

func (x *AddActivityReq) GetActivityEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivityEndTime
	}
	return nil
}

// 定义 AddActivityResp 消息
type AddActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *AddActivityResp) Reset() {
	*x = AddActivityResp{}
	mi := &file_marketing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityResp) ProtoMessage() {}

func (x *AddActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityResp.ProtoReflect.Descriptor instead.
func (*AddActivityResp) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{5}
}

func (x *AddActivityResp) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

// 定义 AddActivityTimeReq 消息
type AddActivityTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int64  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddActivityTimeReq) Reset() {
	*x = AddActivityTimeReq{}
	mi := &file_marketing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityTimeReq) ProtoMessage() {}

func (x *AddActivityTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityTimeReq.ProtoReflect.Descriptor instead.
func (*AddActivityTimeReq) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{6}
}

func (x *AddActivityTimeReq) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *AddActivityTimeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 定义 AddActivityTimeResp 消息
type AddActivityTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int64     `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Name       string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Activity   *Activity `protobuf:"bytes,3,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *AddActivityTimeResp) Reset() {
	*x = AddActivityTimeResp{}
	mi := &file_marketing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityTimeResp) ProtoMessage() {}

func (x *AddActivityTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityTimeResp.ProtoReflect.Descriptor instead.
func (*AddActivityTimeResp) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{7}
}

func (x *AddActivityTimeResp) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *AddActivityTimeResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddActivityTimeResp) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

// 定义 AddActivityProductReq 消息
type AddActivityProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityTimeId int64 `protobuf:"varint,1,opt,name=activity_time_id,json=activityTimeId,proto3" json:"activity_time_id,omitempty"`
	ProductId      int64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *AddActivityProductReq) Reset() {
	*x = AddActivityProductReq{}
	mi := &file_marketing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityProductReq) ProtoMessage() {}

func (x *AddActivityProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityProductReq.ProtoReflect.Descriptor instead.
func (*AddActivityProductReq) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{8}
}

func (x *AddActivityProductReq) GetActivityTimeId() int64 {
	if x != nil {
		return x.ActivityTimeId
	}
	return 0
}

func (x *AddActivityProductReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// 定义 AddActivityProductResp 消息
type AddActivityProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityProduct *ActivityProduct `protobuf:"bytes,1,opt,name=activity_product,json=activityProduct,proto3" json:"activity_product,omitempty"`
}

func (x *AddActivityProductResp) Reset() {
	*x = AddActivityProductResp{}
	mi := &file_marketing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityProductResp) ProtoMessage() {}

func (x *AddActivityProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityProductResp.ProtoReflect.Descriptor instead.
func (*AddActivityProductResp) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{9}
}

func (x *AddActivityProductResp) GetActivityProduct() *ActivityProduct {
	if x != nil {
		return x.ActivityProduct
	}
	return nil
}

// 定义 AddActivityProductSkuReq 消息
type AddActivityProductSkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityProductId int64   `protobuf:"varint,1,opt,name=activity_product_id,json=activityProductId,proto3" json:"activity_product_id,omitempty"`
	ProductId         int64   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Price             float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Number            int64   `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	ProductSkuId      int64   `protobuf:"varint,5,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`
	UserId            int64   `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddActivityProductSkuReq) Reset() {
	*x = AddActivityProductSkuReq{}
	mi := &file_marketing_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityProductSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityProductSkuReq) ProtoMessage() {}

func (x *AddActivityProductSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityProductSkuReq.ProtoReflect.Descriptor instead.
func (*AddActivityProductSkuReq) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{10}
}

func (x *AddActivityProductSkuReq) GetActivityProductId() int64 {
	if x != nil {
		return x.ActivityProductId
	}
	return 0
}

func (x *AddActivityProductSkuReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddActivityProductSkuReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddActivityProductSkuReq) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AddActivityProductSkuReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *AddActivityProductSkuReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 定义 AddActivityProductSkuResp 消息
type AddActivityProductSkuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityProductSku *ActivityProductSku `protobuf:"bytes,1,opt,name=activity_product_sku,json=activityProductSku,proto3" json:"activity_product_sku,omitempty"`
}

func (x *AddActivityProductSkuResp) Reset() {
	*x = AddActivityProductSkuResp{}
	mi := &file_marketing_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityProductSkuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityProductSkuResp) ProtoMessage() {}

func (x *AddActivityProductSkuResp) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityProductSkuResp.ProtoReflect.Descriptor instead.
func (*AddActivityProductSkuResp) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{11}
}

func (x *AddActivityProductSkuResp) GetActivityProductSku() *ActivityProductSku {
	if x != nil {
		return x.ActivityProductSku
	}
	return nil
}

type GetActivityProductByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64 `protobuf:"varint,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetActivityProductByIdReq) Reset() {
	*x = GetActivityProductByIdReq{}
	mi := &file_marketing_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivityProductByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityProductByIdReq) ProtoMessage() {}

func (x *GetActivityProductByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityProductByIdReq.ProtoReflect.Descriptor instead.
func (*GetActivityProductByIdReq) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{12}
}

func (x *GetActivityProductByIdReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type GetActivityProductByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityProduct *ActivityProduct `protobuf:"bytes,1,opt,name=activityProduct,proto3" json:"activityProduct,omitempty"`
}

func (x *GetActivityProductByIdResp) Reset() {
	*x = GetActivityProductByIdResp{}
	mi := &file_marketing_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivityProductByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityProductByIdResp) ProtoMessage() {}

func (x *GetActivityProductByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_marketing_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityProductByIdResp.ProtoReflect.Descriptor instead.
func (*GetActivityProductByIdResp) Descriptor() ([]byte, []int) {
	return file_marketing_proto_rawDescGZIP(), []int{13}
}

func (x *GetActivityProductByIdResp) GetActivityProduct() *ActivityProduct {
	if x != nil {
		return x.ActivityProduct
	}
	return nil
}

var File_marketing_proto protoreflect.FileDescriptor

var file_marketing_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x03, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0xf1, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xdf, 0x03, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xc6, 0x03, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69,
	0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x49, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x60, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x14, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x22, 0x39, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x5b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d,
	0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x32, 0x82, 0x03,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_marketing_proto_rawDescOnce sync.Once
	file_marketing_proto_rawDescData = file_marketing_proto_rawDesc
)

func file_marketing_proto_rawDescGZIP() []byte {
	file_marketing_proto_rawDescOnce.Do(func() {
		file_marketing_proto_rawDescData = protoimpl.X.CompressGZIP(file_marketing_proto_rawDescData)
	})
	return file_marketing_proto_rawDescData
}

var file_marketing_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_marketing_proto_goTypes = []any{
	(*Activity)(nil),                   // 0: pb.Activity
	(*ActivityProduct)(nil),            // 1: pb.ActivityProduct
	(*ActivityProductSku)(nil),         // 2: pb.ActivityProductSku
	(*ActivityTime)(nil),               // 3: pb.ActivityTime
	(*AddActivityReq)(nil),             // 4: pb.AddActivityReq
	(*AddActivityResp)(nil),            // 5: pb.AddActivityResp
	(*AddActivityTimeReq)(nil),         // 6: pb.AddActivityTimeReq
	(*AddActivityTimeResp)(nil),        // 7: pb.AddActivityTimeResp
	(*AddActivityProductReq)(nil),      // 8: pb.AddActivityProductReq
	(*AddActivityProductResp)(nil),     // 9: pb.AddActivityProductResp
	(*AddActivityProductSkuReq)(nil),   // 10: pb.AddActivityProductSkuReq
	(*AddActivityProductSkuResp)(nil),  // 11: pb.AddActivityProductSkuResp
	(*GetActivityProductByIdReq)(nil),  // 12: pb.GetActivityProductByIdReq
	(*GetActivityProductByIdResp)(nil), // 13: pb.GetActivityProductByIdResp
	(*timestamppb.Timestamp)(nil),      // 14: google.protobuf.Timestamp
}
var file_marketing_proto_depIdxs = []int32{
	14, // 0: pb.Activity.activity_start_time:type_name -> google.protobuf.Timestamp
	14, // 1: pb.Activity.activity_end_time:type_name -> google.protobuf.Timestamp
	14, // 2: pb.Activity.create_time:type_name -> google.protobuf.Timestamp
	14, // 3: pb.Activity.update_time:type_name -> google.protobuf.Timestamp
	14, // 4: pb.ActivityProduct.create_time:type_name -> google.protobuf.Timestamp
	14, // 5: pb.ActivityProduct.update_time:type_name -> google.protobuf.Timestamp
	14, // 6: pb.ActivityProductSku.create_time:type_name -> google.protobuf.Timestamp
	14, // 7: pb.ActivityProductSku.update_time:type_name -> google.protobuf.Timestamp
	14, // 8: pb.ActivityTime.start_time:type_name -> google.protobuf.Timestamp
	14, // 9: pb.ActivityTime.end_time:type_name -> google.protobuf.Timestamp
	14, // 10: pb.ActivityTime.create_time:type_name -> google.protobuf.Timestamp
	14, // 11: pb.ActivityTime.update_time:type_name -> google.protobuf.Timestamp
	14, // 12: pb.AddActivityReq.activity_start_time:type_name -> google.protobuf.Timestamp
	14, // 13: pb.AddActivityReq.activity_end_time:type_name -> google.protobuf.Timestamp
	0,  // 14: pb.AddActivityResp.activity:type_name -> pb.Activity
	0,  // 15: pb.AddActivityTimeResp.activity:type_name -> pb.Activity
	1,  // 16: pb.AddActivityProductResp.activity_product:type_name -> pb.ActivityProduct
	2,  // 17: pb.AddActivityProductSkuResp.activity_product_sku:type_name -> pb.ActivityProductSku
	1,  // 18: pb.GetActivityProductByIdResp.activityProduct:type_name -> pb.ActivityProduct
	4,  // 19: pb.activity.AddActivity:input_type -> pb.AddActivityReq
	6,  // 20: pb.activity.AddActivityTime:input_type -> pb.AddActivityTimeReq
	8,  // 21: pb.activity.AddActivityProduct:input_type -> pb.AddActivityProductReq
	10, // 22: pb.activity.AddActivityProductSku:input_type -> pb.AddActivityProductSkuReq
	12, // 23: pb.activity.GetActivityProductById:input_type -> pb.GetActivityProductByIdReq
	5,  // 24: pb.activity.AddActivity:output_type -> pb.AddActivityResp
	7,  // 25: pb.activity.AddActivityTime:output_type -> pb.AddActivityTimeResp
	9,  // 26: pb.activity.AddActivityProduct:output_type -> pb.AddActivityProductResp
	11, // 27: pb.activity.AddActivityProductSku:output_type -> pb.AddActivityProductSkuResp
	13, // 28: pb.activity.GetActivityProductById:output_type -> pb.GetActivityProductByIdResp
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_marketing_proto_init() }
func file_marketing_proto_init() {
	if File_marketing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_marketing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_marketing_proto_goTypes,
		DependencyIndexes: file_marketing_proto_depIdxs,
		MessageInfos:      file_marketing_proto_msgTypes,
	}.Build()
	File_marketing_proto = out.File
	file_marketing_proto_rawDesc = nil
	file_marketing_proto_goTypes = nil
	file_marketing_proto_depIdxs = nil
}
