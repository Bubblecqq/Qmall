syntax = "proto3";

option go_package="./pb";
import "google/protobuf/timestamp.proto";
//import "product/cmd/rpc/product/pb/product.proto";
package pb;


message TradeOrder {
  int64 id = 1;
  string orderNo = 2;
  int64 userId = 3;
  double TotalAmount = 4;
  double productAmount = 5;
  double shippingAmount = 6;
  double discountAmount = 7;
  double payAmount = 8;
  double refundAmount = 9;
  google.protobuf.Timestamp submitTime=10;
  google.protobuf.Timestamp expireTime=11;
  int32 orderStatus = 12;
  string cancelReason = 13;
  int64 createUser = 14;
  int64 updateUser = 15;
  google.protobuf.Timestamp createTime=16;
  bool isDeleted = 17;
}


message ProductOrder {
  int64  Id = 1;
  int64  productId = 2;
  int64  productSkuId = 3;
  int64  userId = 4;
  string  productName = 5;
  string  productImageUrl = 6;
  string   skuDescribe   =7;
  int64   quantity   =8;
  string   productPrice =9;
  string realPrice  =10;
  string realAmount  =11;
  int64 createUser = 14;
  int64 updateUser = 15;
  google.protobuf.Timestamp createTime=16;
  google.protobuf.Timestamp updateTime=17;
  int64 activityId = 18;
  int32 detailStatus = 19;
  int32 activityType = 20;
  int32 commentStatus = 21;
}

message ShoppingCart {
  int64 id = 1;
  int64 user_id = 2;
  int64 product_id = 3;
  int64 product_sku_id = 4;
  string product_name = 5;
  string product_main_picture = 6;
  int64 number = 7;
  google.protobuf.Timestamp create_time = 8;
  google.protobuf.Timestamp update_time = 9;
  int64 create_user = 10;
  int64 update_user = 11;
  int32 is_delete =12;
}


message ProductSku {
  int64 id = 1;
  string name = 2;
  int32 product_id = 3;
  string attribute_symbol_list = 4;
  double sell_price = 5;
  double cost_price = 6;
  int64 stock = 7;
  int64 stock_warn = 8;
  google.protobuf.Timestamp  create_time = 9;
  google.protobuf.Timestamp  update_time = 10;
  int32 is_enable = 11;
  int64 create_user = 12;
  int64 update_user = 13;
}

message DetailProduct {
  int64 id = 1;
  string name = 2;
  int32 product_type = 3;
  int32 category_id = 4;
  double starting_price = 5;
  int64 total_stock = 6;
  string main_picture = 7;
  double remote_area_postage = 8;
  int32 single_buy_limit = 9;
  string remark = 10;
  google.protobuf.Timestamp  create_time = 11;
  google.protobuf.Timestamp  update_time = 12;
  int32 is_enable = 13;
  string create_user = 14;
  string update_user = 15;
  string detail = 16;
  repeated string picture_list = 17;
}


//创建订单
message AddTradeOrderReq {
  repeated int64 cartIds = 1;
  bool isVirtual = 2;
  int64 RecipientAddressId = 3;
  TradeOrder tradeOrder = 4;
}
message AddTradeOrderResp {
  TradeOrder tradeOrder = 1;
  repeated ProductOrder productOrders = 2;
}
message OrderTotalReq {
  repeated int64 cartIds = 1;
}
message OrderTotalResp {
  double totalPrice = 1;
}
message FindOrderReq {
  int64 id = 1;
  string orderNo = 2;
}
message FindOrderResp {
  TradeOrder tradeOrder = 1;
}

message GetTradeOrderListReq {}
message GetTradeOrderListResp {
  repeated TradeOrder tradeOrders=1;
}
message PageTradeOrderReq {
  int32 length = 1;
  int32 pageIndex =2;
}
message PageTradeOrderResp {
  repeated TradeOrder tradeOrders=1;
}

service tradeOrder {
  rpc AddTradeOrder(AddTradeOrderReq) returns (AddTradeOrderResp);
  rpc UpdateTradeOrder(AddTradeOrderReq) returns (AddTradeOrderResp);
  rpc GetOrderTotal (OrderTotalReq) returns (OrderTotalResp);
  rpc FindOrder (FindOrderReq) returns (FindOrderResp);
  rpc GetOrders (GetTradeOrderListReq) returns (GetTradeOrderListResp);
  rpc GetTradeOrdersByPage (PageTradeOrderReq) returns (PageTradeOrderResp);

  rpc AddProductOrder (AddProductOrderReq) returns (AddProductOrderResp);
  rpc GetProductOrderList (GetProductOrderListReq) returns (GetProductOrderListResp);
  rpc GetProductOrderByUserId(GetProductOrderByUserIdReq) returns (GetProductOrderByUserIdResp);

}

message AddProductOrderReq {
  int64  productId = 1;
  int64  productSkuId = 2;
  int64  userId = 3;
  string  productName = 4;
  string  productImageUrl = 5;
  string   skuDescribe   =6;
  int64   quantity   =7;
  float   productPrice =8;
  float realPrice  =9;
  float realAmount  =10;

}
message AddProductOrderResp {

}

message GetProductOrderListReq {

}
message GetProductOrderListResp {
  repeated ProductOrder productOrder = 1;
}

message GetProductOrderByUserIdReq {
  int64 userId = 1;
}
message GetProductOrderByUserIdResp {
  ProductOrder productOrder = 1;
}


//service productOrder {
//  rpc AddProductOrder (AddProductOrderReq) returns (AddProductOrderResp);
//  rpc GetProductOrderList (GetProductOrderListReq) returns (GetProductOrderListResp);
//  rpc GetProductOrderByUserId(GetProductOrderByUserIdReq) returns (GetProductOrderByUserIdResp);
//}