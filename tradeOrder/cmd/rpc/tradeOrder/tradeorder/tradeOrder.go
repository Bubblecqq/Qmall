// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: tradeOrder.proto

package tradeorder

import (
	"context"

	"QMall/tradeOrder/cmd/rpc/tradeOrder/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddTradeOrderReq      = pb.AddTradeOrderReq
	AddTradeOrderResp     = pb.AddTradeOrderResp
	DetailProduct         = pb.DetailProduct
	FindOrderReq          = pb.FindOrderReq
	FindOrderResp         = pb.FindOrderResp
	GetTradeOrderListReq  = pb.GetTradeOrderListReq
	GetTradeOrderListResp = pb.GetTradeOrderListResp
	OrderTotalReq         = pb.OrderTotalReq
	OrderTotalResp        = pb.OrderTotalResp
	PageTradeOrderReq     = pb.PageTradeOrderReq
	PageTradeOrderResp    = pb.PageTradeOrderResp
	ProductOrder          = pb.ProductOrder
	ProductSku            = pb.ProductSku
	ShoppingCart          = pb.ShoppingCart
	TradeOrder            = pb.TradeOrder

	TradeOrderZrpcClient interface {
		AddTradeOrder(ctx context.Context, in *AddTradeOrderReq, opts ...grpc.CallOption) (*AddTradeOrderResp, error)
		UpdateTradeOrder(ctx context.Context, in *AddTradeOrderReq, opts ...grpc.CallOption) (*AddTradeOrderResp, error)
		GetOrderTotal(ctx context.Context, in *OrderTotalReq, opts ...grpc.CallOption) (*OrderTotalResp, error)
		FindOrder(ctx context.Context, in *FindOrderReq, opts ...grpc.CallOption) (*FindOrderResp, error)
		GetOrders(ctx context.Context, in *GetTradeOrderListReq, opts ...grpc.CallOption) (*GetTradeOrderListResp, error)
		GetTradeOrdersByPage(ctx context.Context, in *PageTradeOrderReq, opts ...grpc.CallOption) (*PageTradeOrderResp, error)
	}

	defaultTradeOrderZrpcClient struct {
		cli zrpc.Client
	}
)

func NewTradeOrderZrpcClient(cli zrpc.Client) TradeOrderZrpcClient {
	return &defaultTradeOrderZrpcClient{
		cli: cli,
	}
}

func (m *defaultTradeOrderZrpcClient) AddTradeOrder(ctx context.Context, in *AddTradeOrderReq, opts ...grpc.CallOption) (*AddTradeOrderResp, error) {
	client := pb.NewTradeOrderClient(m.cli.Conn())
	return client.AddTradeOrder(ctx, in, opts...)
}

func (m *defaultTradeOrderZrpcClient) UpdateTradeOrder(ctx context.Context, in *AddTradeOrderReq, opts ...grpc.CallOption) (*AddTradeOrderResp, error) {
	client := pb.NewTradeOrderClient(m.cli.Conn())
	return client.UpdateTradeOrder(ctx, in, opts...)
}

func (m *defaultTradeOrderZrpcClient) GetOrderTotal(ctx context.Context, in *OrderTotalReq, opts ...grpc.CallOption) (*OrderTotalResp, error) {
	client := pb.NewTradeOrderClient(m.cli.Conn())
	return client.GetOrderTotal(ctx, in, opts...)
}

func (m *defaultTradeOrderZrpcClient) FindOrder(ctx context.Context, in *FindOrderReq, opts ...grpc.CallOption) (*FindOrderResp, error) {
	client := pb.NewTradeOrderClient(m.cli.Conn())
	return client.FindOrder(ctx, in, opts...)
}

func (m *defaultTradeOrderZrpcClient) GetOrders(ctx context.Context, in *GetTradeOrderListReq, opts ...grpc.CallOption) (*GetTradeOrderListResp, error) {
	client := pb.NewTradeOrderClient(m.cli.Conn())
	return client.GetOrders(ctx, in, opts...)
}

func (m *defaultTradeOrderZrpcClient) GetTradeOrdersByPage(ctx context.Context, in *PageTradeOrderReq, opts ...grpc.CallOption) (*PageTradeOrderResp, error) {
	client := pb.NewTradeOrderClient(m.cli.Conn())
	return client.GetTradeOrdersByPage(ctx, in, opts...)
}
