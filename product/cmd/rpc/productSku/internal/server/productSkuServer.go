// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: productSku.proto

package server

import (
	"context"

	"goZeroDemo4/product/cmd/rpc/productSku/internal/logic"
	"goZeroDemo4/product/cmd/rpc/productSku/internal/svc"
	"goZeroDemo4/product/cmd/rpc/productSku/pb"
)

type ProductSkuServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProductSkuServer
}

func NewProductSkuServer(svcCtx *svc.ServiceContext) *ProductSkuServer {
	return &ProductSkuServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductSkuServer) CreateProductSku(ctx context.Context, in *pb.CreateProductSkuReq) (*pb.CreateProductSkuResp, error) {
	l := logic.NewCreateProductSkuLogic(ctx, s.svcCtx)
	return l.CreateProductSku(in)
}

func (s *ProductSkuServer) GetProductListSku(ctx context.Context, in *pb.GetProductSkuListReq) (*pb.GetProductSkuListResp, error) {
	l := logic.NewGetProductListSkuLogic(ctx, s.svcCtx)
	return l.GetProductListSku(in)
}

func (s *ProductSkuServer) DeleteProductSku(ctx context.Context, in *pb.DeleteProductSkuReq) (*pb.DeleteProductSkuResp, error) {
	l := logic.NewDeleteProductSkuLogic(ctx, s.svcCtx)
	return l.DeleteProductSku(in)
}

func (s *ProductSkuServer) GetProductSku(ctx context.Context, in *pb.GetProductSkuByIdReq) (*pb.GetProductSkuByIdResp, error) {
	l := logic.NewGetProductSkuLogic(ctx, s.svcCtx)
	return l.GetProductSku(in)
}
