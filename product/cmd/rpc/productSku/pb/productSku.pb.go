// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: productSku.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProductId           int32                  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	AttributeSymbolList string                 `protobuf:"bytes,4,opt,name=attribute_symbol_list,json=attributeSymbolList,proto3" json:"attribute_symbol_list,omitempty"`
	SellPrice           float64                `protobuf:"fixed64,5,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	CostPrice           float64                `protobuf:"fixed64,6,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	Stock               int32                  `protobuf:"varint,7,opt,name=stock,proto3" json:"stock,omitempty"`
	StockWarn           int64                  `protobuf:"varint,8,opt,name=stock_warn,json=stockWarn,proto3" json:"stock_warn,omitempty"`
	CreateTime          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IsEnable            int32                  `protobuf:"varint,11,opt,name=is_enable,json=isEnable,proto3" json:"is_enable,omitempty"`
	CreateUser          string                 `protobuf:"bytes,12,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	UpdateUser          string                 `protobuf:"bytes,13,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`
}

func (x *ProductSku) Reset() {
	*x = ProductSku{}
	mi := &file_productSku_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSku) ProtoMessage() {}

func (x *ProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSku.ProtoReflect.Descriptor instead.
func (*ProductSku) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{0}
}

func (x *ProductSku) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductSku) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductSku) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductSku) GetAttributeSymbolList() string {
	if x != nil {
		return x.AttributeSymbolList
	}
	return ""
}

func (x *ProductSku) GetSellPrice() float64 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

func (x *ProductSku) GetCostPrice() float64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductSku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSku) GetStockWarn() int64 {
	if x != nil {
		return x.StockWarn
	}
	return 0
}

func (x *ProductSku) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ProductSku) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ProductSku) GetIsEnable() int32 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

func (x *ProductSku) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *ProductSku) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type CreateProductSkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProductId           int32   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	AttributeSymbolList string  `protobuf:"bytes,3,opt,name=attribute_symbol_list,json=attributeSymbolList,proto3" json:"attribute_symbol_list,omitempty"`
	SellPrice           float64 `protobuf:"fixed64,4,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	CostPrice           float64 `protobuf:"fixed64,5,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	Stock               int32   `protobuf:"varint,6,opt,name=stock,proto3" json:"stock,omitempty"`
	StockWarn           int64   `protobuf:"varint,7,opt,name=stock_warn,json=stockWarn,proto3" json:"stock_warn,omitempty"`
}

func (x *CreateProductSkuReq) Reset() {
	*x = CreateProductSkuReq{}
	mi := &file_productSku_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductSkuReq) ProtoMessage() {}

func (x *CreateProductSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductSkuReq.ProtoReflect.Descriptor instead.
func (*CreateProductSkuReq) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProductSkuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductSkuReq) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateProductSkuReq) GetAttributeSymbolList() string {
	if x != nil {
		return x.AttributeSymbolList
	}
	return ""
}

func (x *CreateProductSkuReq) GetSellPrice() float64 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

func (x *CreateProductSkuReq) GetCostPrice() float64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *CreateProductSkuReq) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CreateProductSkuReq) GetStockWarn() int64 {
	if x != nil {
		return x.StockWarn
	}
	return 0
}

type CreateProductSkuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateProductSkuResp) Reset() {
	*x = CreateProductSkuResp{}
	mi := &file_productSku_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductSkuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductSkuResp) ProtoMessage() {}

func (x *CreateProductSkuResp) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductSkuResp.ProtoReflect.Descriptor instead.
func (*CreateProductSkuResp) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{2}
}

type GetProductSkuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProductSkuListReq) Reset() {
	*x = GetProductSkuListReq{}
	mi := &file_productSku_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductSkuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductSkuListReq) ProtoMessage() {}

func (x *GetProductSkuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductSkuListReq.ProtoReflect.Descriptor instead.
func (*GetProductSkuListReq) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{3}
}

type GetProductSkuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuList []*ProductSku `protobuf:"bytes,1,rep,name=ProductSkuList,proto3" json:"ProductSkuList,omitempty"`
}

func (x *GetProductSkuListResp) Reset() {
	*x = GetProductSkuListResp{}
	mi := &file_productSku_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductSkuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductSkuListResp) ProtoMessage() {}

func (x *GetProductSkuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductSkuListResp.ProtoReflect.Descriptor instead.
func (*GetProductSkuListResp) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{4}
}

func (x *GetProductSkuListResp) GetProductSkuList() []*ProductSku {
	if x != nil {
		return x.ProductSkuList
	}
	return nil
}

type DeleteProductSkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProductSkuReq) Reset() {
	*x = DeleteProductSkuReq{}
	mi := &file_productSku_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductSkuReq) ProtoMessage() {}

func (x *DeleteProductSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductSkuReq.ProtoReflect.Descriptor instead.
func (*DeleteProductSkuReq) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteProductSkuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductSkuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductSkuResp) Reset() {
	*x = DeleteProductSkuResp{}
	mi := &file_productSku_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductSkuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductSkuResp) ProtoMessage() {}

func (x *DeleteProductSkuResp) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductSkuResp.ProtoReflect.Descriptor instead.
func (*DeleteProductSkuResp) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{6}
}

type GetProductSkuByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProductSkuByIdReq) Reset() {
	*x = GetProductSkuByIdReq{}
	mi := &file_productSku_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductSkuByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductSkuByIdReq) ProtoMessage() {}

func (x *GetProductSkuByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductSkuByIdReq.ProtoReflect.Descriptor instead.
func (*GetProductSkuByIdReq) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{7}
}

func (x *GetProductSkuByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProductSkuByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProductSkuByIdResp) Reset() {
	*x = GetProductSkuByIdResp{}
	mi := &file_productSku_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductSkuByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductSkuByIdResp) ProtoMessage() {}

func (x *GetProductSkuByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_productSku_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductSkuByIdResp.ProtoReflect.Descriptor instead.
func (*GetProductSkuByIdResp) Descriptor() ([]byte, []int) {
	return file_productSku_proto_rawDescGZIP(), []int{8}
}

var File_productSku_proto protoreflect.FileDescriptor

var file_productSku_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x03, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xef, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x65,
	0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x73,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x4f, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x32, 0xaa, 0x02, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x45, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_productSku_proto_rawDescOnce sync.Once
	file_productSku_proto_rawDescData = file_productSku_proto_rawDesc
)

func file_productSku_proto_rawDescGZIP() []byte {
	file_productSku_proto_rawDescOnce.Do(func() {
		file_productSku_proto_rawDescData = protoimpl.X.CompressGZIP(file_productSku_proto_rawDescData)
	})
	return file_productSku_proto_rawDescData
}

var file_productSku_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_productSku_proto_goTypes = []any{
	(*ProductSku)(nil),            // 0: pb.ProductSku
	(*CreateProductSkuReq)(nil),   // 1: pb.CreateProductSkuReq
	(*CreateProductSkuResp)(nil),  // 2: pb.CreateProductSkuResp
	(*GetProductSkuListReq)(nil),  // 3: pb.GetProductSkuListReq
	(*GetProductSkuListResp)(nil), // 4: pb.GetProductSkuListResp
	(*DeleteProductSkuReq)(nil),   // 5: pb.DeleteProductSkuReq
	(*DeleteProductSkuResp)(nil),  // 6: pb.DeleteProductSkuResp
	(*GetProductSkuByIdReq)(nil),  // 7: pb.GetProductSkuByIdReq
	(*GetProductSkuByIdResp)(nil), // 8: pb.GetProductSkuByIdResp
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_productSku_proto_depIdxs = []int32{
	9, // 0: pb.ProductSku.create_time:type_name -> google.protobuf.Timestamp
	9, // 1: pb.ProductSku.update_time:type_name -> google.protobuf.Timestamp
	0, // 2: pb.GetProductSkuListResp.ProductSkuList:type_name -> pb.ProductSku
	1, // 3: pb.productSku.CreateProductSku:input_type -> pb.CreateProductSkuReq
	3, // 4: pb.productSku.GetProductListSku:input_type -> pb.GetProductSkuListReq
	5, // 5: pb.productSku.DeleteProductSku:input_type -> pb.DeleteProductSkuReq
	7, // 6: pb.productSku.GetProductSku:input_type -> pb.GetProductSkuByIdReq
	2, // 7: pb.productSku.CreateProductSku:output_type -> pb.CreateProductSkuResp
	4, // 8: pb.productSku.GetProductListSku:output_type -> pb.GetProductSkuListResp
	6, // 9: pb.productSku.DeleteProductSku:output_type -> pb.DeleteProductSkuResp
	8, // 10: pb.productSku.GetProductSku:output_type -> pb.GetProductSkuByIdResp
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_productSku_proto_init() }
func file_productSku_proto_init() {
	if File_productSku_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_productSku_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_productSku_proto_goTypes,
		DependencyIndexes: file_productSku_proto_depIdxs,
		MessageInfos:      file_productSku_proto_msgTypes,
	}.Build()
	File_productSku_proto = out.File
	file_productSku_proto_rawDesc = nil
	file_productSku_proto_goTypes = nil
	file_productSku_proto_depIdxs = nil
}
