// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	product "QMall/product/cmd/api/desc/product/internal/handler/product"
	"QMall/product/cmd/api/desc/product/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 获取商品详情
				Method:  http.MethodPost,
				Path:    "/ProductDetail",
				Handler: product.ProductDetailHandler(serverCtx),
			},
			{
				// 商品分页
				Method:  http.MethodPost,
				Path:    "/ProductIndex",
				Handler: product.ProductIndexHandler(serverCtx),
			},
			{
				// 创建商品
				Method:  http.MethodPost,
				Path:    "/createProduct",
				Handler: product.CreateProductHandler(serverCtx),
			},
			{
				// 创建商品关联
				Method:  http.MethodPost,
				Path:    "/createProductSku",
				Handler: product.CreateProductSkuHandler(serverCtx),
			},
			{
				// 根据id删除商品
				Method:  http.MethodPost,
				Path:    "/deleteProduct",
				Handler: product.DeleteProductHandler(serverCtx),
			},
			{
				// 根据id删除商品关联
				Method:  http.MethodPost,
				Path:    "/deleteProductSku",
				Handler: product.DeleteProductSkuHandler(serverCtx),
			},
			{
				// 根据id获取商品
				Method:  http.MethodPost,
				Path:    "/getProductById",
				Handler: product.GetProductByIdHandler(serverCtx),
			},
			{
				// 根据id获取商品关联
				Method:  http.MethodPost,
				Path:    "/getProductSkuById",
				Handler: product.GetProductSkuByIdHandler(serverCtx),
			},
			{
				// 获取商品关联列表
				Method:  http.MethodPost,
				Path:    "/getProductSkus",
				Handler: product.GetProductSkusHandler(serverCtx),
			},
			{
				// 获取商品列表
				Method:  http.MethodPost,
				Path:    "/getProducts",
				Handler: product.GetProductsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/product/v1"),
	)
}
